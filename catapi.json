{
    "openapi": "3.0.2",
    "info": {
        "title": "ðŸ˜¸ Cheshire-Cat API",
        "description": "Customizable AI architecture",
        "version": "0.0.5",
        "x-logo": {
            "url": "https://github.com/cheshire-cat-ai/core/blob/main/cheshire-cat.jpeg?raw=true"
        }
    },
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Home",
                "description": "Server status",
                "operationId": "home",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/settings/": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get Settings",
                "description": "Get the entire list of settings available in the database",
                "operationId": "get_settings",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "title": "Search",
                            "type": "string",
                            "default": ""
                        },
                        "description": "The setting to search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            },
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Create Setting",
                "description": "Create a new setting in the database",
                "operationId": "create_setting",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettingBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/settings/{settingId}/": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get Setting",
                "description": "Get the a specific setting from the database",
                "operationId": "get_setting",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Settingid",
                            "type": "string"
                        },
                        "name": "settingId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            },
            "delete": {
                "tags": [
                    "Settings"
                ],
                "summary": "Delete Setting",
                "description": "Delete a specific setting in the database",
                "operationId": "delete_setting",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Settingid",
                            "type": "string"
                        },
                        "name": "settingId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update Setting",
                "description": "Update a specific setting in the database if it exists",
                "operationId": "update_setting",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Settingid",
                            "type": "string"
                        },
                        "name": "settingId",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettingBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/prompt/settings/": {
            "get": {
                "tags": [
                    "Prompt"
                ],
                "summary": "Get Default Prompt Settings",
                "operationId": "get_default_prompt_settings",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultPromptSettings"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/llm/settings/": {
            "get": {
                "tags": [
                    "Large Language Model"
                ],
                "summary": "Get LLMs Settings",
                "description": "Get the list of the Large Language Models",
                "operationId": "get_llms_settings",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsResponse"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/llm/settings/{languageModelName}/": {
            "get": {
                "tags": [
                    "Large Language Model"
                ],
                "summary": "Get Llm Settings",
                "description": "Get settings and schema of the specified Large Language Model",
                "operationId": "get_llm_settings",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "languageModelName",
                            "type": "string"
                        },
                        "name": "languageModelName",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            },
            "put": {
                "tags": [
                    "Large Language Model"
                ],
                "summary": "Upsert LLM Setting",
                "description": "Upsert the Large Language Model setting",
                "operationId": "upsert_llm_setting",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "languageModelName",
                            "type": "string"
                        },
                        "name": "languageModelName",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Payload",
                                "type": "object"
                            },
                            "example": {
                                "openai_api_key": "your-key-here"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/embedder/settings/": {
            "get": {
                "tags": [
                    "Embedder"
                ],
                "summary": "Get Embedders Settings",
                "description": "Get the list of the Embedders",
                "operationId": "get_embedders_settings",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsResponse"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/embedder/settings/{languageEmbedderName}/": {
            "get": {
                "tags": [
                    "Embedder"
                ],
                "summary": "Get Embedder Settings",
                "description": "Get settings and schema of the specified Embedder",
                "operationId": "get_embedder_settings",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "languageEmbedderName",
                            "type": "string"
                        },
                        "name": "languageEmbedderName",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            },
            "put": {
                "tags": [
                    "Embedder"
                ],
                "summary": "Upsert Embedder Setting",
                "description": "Upsert the Embedder setting",
                "operationId": "upsert_embedder_setting",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "languageEmbedderName",
                            "type": "string"
                        },
                        "name": "languageEmbedderName",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Payload",
                                "type": "object"
                            },
                            "example": {
                                "openai_api_key": "your-key-here"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/plugins/": {
            "get": {
                "tags": [
                    "Plugins"
                ],
                "summary": "List Available Plugins",
                "description": "List available plugins",
                "operationId": "list_available_plugins",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PluginsList"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/plugins/upload/": {
            "post": {
                "tags": [
                    "Plugins"
                ],
                "summary": "Install Plugin",
                "description": "Install a new plugin from a zip file",
                "operationId": "install_plugin",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BodyInstallPlugin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/plugins/upload/registry": {
            "post": {
                "tags": [
                    "Plugins"
                ],
                "summary": "Install Plugin From Registry",
                "description": "Install a new plugin from external repository",
                "operationId": "install_plugin_from_registry",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BodyUploadUrl"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/plugins/toggle/{plugin_id}": {
            "put": {
                "tags": [
                    "Plugins"
                ],
                "summary": "Toggle Plugin",
                "description": "Enable or disable a single plugin",
                "operationId": "toggle_plugin",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Plugin Id",
                            "type": "string"
                        },
                        "name": "plugin_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ToggleResponse",
                                    "required": [
                                        "info"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "info": {
                                            "title": "Info",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/plugins/{plugin_id}": {
            "get": {
                "tags": [
                    "Plugins"
                ],
                "summary": "Get Plugin Details",
                "description": "Returns information on a single plugin",
                "operationId": "get_plugin_details",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Plugin Id",
                            "type": "string"
                        },
                        "name": "plugin_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plugin"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            },
            "delete": {
                "tags": [
                    "Plugins"
                ],
                "summary": "Delete Plugin",
                "description": "Physically remove a plugin",
                "operationId": "delete_plugin",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Plugin Id",
                            "type": "string"
                        },
                        "name": "plugin_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/plugins/settings/": {
            "get": {
                "tags": [
                    "Plugins"
                ],
                "summary": "Get Plugins Settings",
                "description": "Returns the settings of all the plugins",
                "operationId": "get_plugins_settings",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsResponse"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/plugins/settings/{plugin_id}": {
            "get": {
                "tags": [
                    "Plugins"
                ],
                "summary": "Get Plugin Settings",
                "description": "Returns the settings of a specific plugin",
                "operationId": "get_plugin_settings",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Plugin Id",
                            "type": "string"
                        },
                        "name": "plugin_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Setting"
                                        },
                                        {
                                            "required": [
                                                "schema"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/JsonSchema"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            },
            "put": {
                "tags": [
                    "Plugins"
                ],
                "summary": "Upsert Plugin Settings",
                "description": "Updates the settings of a specific plugin",
                "operationId": "upsert_plugin_settings",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Plugin Id",
                            "type": "string"
                        },
                        "name": "plugin_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Payload",
                                "type": "object"
                            },
                            "example": {
                                "setting_a": "some value",
                                "setting_b": "another value"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/memory/recall/": {
            "get": {
                "tags": [
                    "Memory"
                ],
                "summary": "Recall Memories From Text",
                "description": "Search k memories similar to given text.",
                "operationId": "recall_memories_from_text",
                "parameters": [
                    {
                        "description": "Find memories similar to this text.",
                        "required": true,
                        "schema": {
                            "title": "Text",
                            "type": "string",
                            "description": "Find memories similar to this text."
                        },
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "description": "How many memories to return.",
                        "required": false,
                        "schema": {
                            "title": "K",
                            "type": "integer",
                            "description": "How many memories to return.",
                            "default": 100
                        },
                        "name": "k",
                        "in": "query"
                    },
                    {
                        "description": "User id.",
                        "required": false,
                        "schema": {
                            "title": "User Id",
                            "type": "string",
                            "description": "User id.",
                            "default": "user"
                        },
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MemoryRecall"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/memory/collections/": {
            "get": {
                "tags": [
                    "Memory"
                ],
                "summary": "Get Collections",
                "description": "Get list of available collections",
                "operationId": "get_collections",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionsList"
                                }
                            }
                        }
                    }
                },
                "security": []
            },
            "delete": {
                "tags": [
                    "Memory"
                ],
                "summary": "Wipe Collections",
                "description": "Delete and create all collections",
                "operationId": "wipe_collections",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteResponse"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/memory/collections/{collection_id}/": {
            "delete": {
                "tags": [
                    "Memory"
                ],
                "summary": "Wipe Single Collection",
                "description": "Delete and recreate a collection",
                "operationId": "wipe_single_collection",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Collection Id",
                            "type": "string"
                        },
                        "name": "collection_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/memory/collections/{collection_id}/points/{memory_id}/": {
            "delete": {
                "tags": [
                    "Memory"
                ],
                "summary": "Delete Element In Memory",
                "description": "Delete specific element in memory.",
                "operationId": "delete_element_in_memory",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Collection Id",
                            "type": "string"
                        },
                        "name": "collection_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Memory Id",
                            "type": "string"
                        },
                        "name": "memory_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/memory/conversation_history/": {
            "delete": {
                "tags": [
                    "Memory"
                ],
                "summary": "Wipe Conversation History",
                "description": "Delete conversation history from working memory",
                "operationId": "wipe_conversation_history",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteResponse"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/rabbithole/": {
            "post": {
                "tags": [
                    "Rabbit Hole"
                ],
                "summary": "Upload File",
                "description": "Upload a file containing text (.txt, .md, .pdf, etc.). File content will be extracted and segmented into chunks.\nChunks will be then vectorized and stored into documents memory.",
                "operationId": "upload_file",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BodyUploadFile"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/rabbithole/web/": {
            "post": {
                "tags": [
                    "Rabbit Hole"
                ],
                "summary": "Upload Url",
                "description": "Upload a url. Website content will be extracted and segmented into chunks.\nChunks will be then vectorized and stored into documents memory.",
                "operationId": "upload_url",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BodyUploadUrl"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/rabbithole/memory/": {
            "post": {
                "tags": [
                    "Rabbit Hole"
                ],
                "summary": "Upload Memory",
                "description": "Upload a memory json file to the cat memory",
                "operationId": "upload_memory",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BodyUploadMemory"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Upload Memory",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        }
    },
    "components": {
        "schemas": {
            "BodyInstallPlugin": {
                "title": "BodyInstallPlugin",
                "required": [
                    "file"
                ],
                "type": "object",
                "properties": {
                    "file": {
                        "title": "File",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "BodyUploadFile": {
                "title": "BodyUploadFile",
                "required": [
                    "file"
                ],
                "type": "object",
                "properties": {
                    "file": {
                        "title": "File",
                        "type": "string",
                        "format": "binary"
                    },
                    "chunk_size": {
                        "title": "Chunk Size",
                        "type": "integer",
                        "description": "Maximum length of each chunk after the document is split (in characters)",
                        "default": 400
                    },
                    "chunk_overlap": {
                        "title": "Chunk Overlap",
                        "type": "integer",
                        "description": "Chunk overlap (in characters)",
                        "default": 100
                    }
                }
            },
            "BodyUploadMemory": {
                "title": "BodyUploadMemory",
                "required": [
                    "file"
                ],
                "type": "object",
                "properties": {
                    "file": {
                        "title": "File",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "BodyUploadUrl": {
                "title": "BodyUploadUrl",
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "title": "Url",
                        "type": "string",
                        "description": "URL of the website to which you want to save the content"
                    },
                    "chunk_size": {
                        "title": "Chunk Size",
                        "type": "integer",
                        "description": "Maximum length of each chunk after the document is split (in characters)",
                        "default": 400
                    },
                    "chunk_overlap": {
                        "title": "Chunk Overlap",
                        "type": "integer",
                        "description": "Chunk overlap (in characters)",
                        "default": 100
                    }
                }
            },
            "Collection": {
                "title": "Collection",
                "required": [
                    "name",
                    "vectors_count"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "vectors_count": {
                        "title": "Vectors Count",
                        "type": "integer"
                    }
                }
            },
            "CollectionData": {
                "title": "CollectionData",
                "required": [
                    "page_content",
                    "metadata",
                    "score",
                    "vector",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "page_content": {
                        "title": "Page Content",
                        "type": "string"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/MetaData"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "score": {
                        "title": "Score",
                        "type": "integer"
                    },
                    "vector": {
                        "title": "Vector",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "CollectionsList": {
                "title": "CollectionsList",
                "required": [
                    "collections"
                ],
                "type": "object",
                "properties": {
                    "collections": {
                        "title": "Collections",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Collection"
                        }
                    }
                }
            },
            "FileResponse": {
                "title": "FileResponse",
                "required": [
                    "filename",
                    "content_type",
                    "info"
                ],
                "type": "object",
                "properties": {
                    "filename": {
                        "title": "File Name",
                        "type": "string"
                    },
                    "content_type": {
                        "title": "Content Type",
                        "type": "string"
                    },
                    "info": {
                        "title": "Info",
                        "type": "string"
                    }
                }
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "required": [
                            "error"
                        ],
                        "type": "object",
                        "properties": {
                            "error": {
                                "title": "Message",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "MemoryRecall": {
                "title": "MemoryRecall",
                "required": [
                    "query",
                    "vectors"
                ],
                "type": "object",
                "properties": {
                    "query": {
                        "$ref": "#/components/schemas/QueryData"
                    },
                    "vectors": {
                        "$ref": "#/components/schemas/VectorsData"
                    }
                }
            },
            "MetaData": {
                "title": "MetaData",
                "required": [
                    "source",
                    "when"
                ],
                "type": "object",
                "properties": {
                    "source": {
                        "title": "Source",
                        "type": "string"
                    },
                    "when": {
                        "title": "When",
                        "type": "integer"
                    },
                    "docstring": {
                        "title": "DocString",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                }
            },
            "Plugin": {
                "title": "Plugin",
                "required": [
                    "id",
                    "name",
                    "description",
                    "author_name",
                    "author_url",
                    "plugin_url",
                    "tags",
                    "thumb",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "author_name": {
                        "title": "Author Name",
                        "type": "string"
                    },
                    "author_url": {
                        "title": "Author Url",
                        "type": "string"
                    },
                    "plugin_url": {
                        "title": "Plugin Url",
                        "type": "string"
                    },
                    "tags": {
                        "title": "Tags",
                        "type": "string"
                    },
                    "thumb": {
                        "title": "Thumb",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string"
                    },
                    "active": {
                        "title": "Active",
                        "type": "boolean"
                    }
                }
            },
            "PluginsList": {
                "title": "PluginsList",
                "required": [
                    "installed",
                    "registry"
                ],
                "type": "object",
                "properties": {
                    "installed": {
                        "title": "Installed",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plugin"
                        }
                    },
                    "registry": {
                        "title": "Registry",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plugin"
                        }
                    }
                }
            },
            "DefaultPromptSettings": {
                "title": "DefaultPromptSettings",
                "required": [
                    "prefix",
                    "use_episodic_memory",
                    "use_declarative_memory",
                    "use_procedural_memory"
                ],
                "type": "object",
                "properties": {
                    "prefix": {
                        "title": "Prefix",
                        "type": "string"
                    },
                    "use_episodic_memory": {
                        "title": "Use Episodic Memory",
                        "type": "boolean"
                    },
                    "use_declarative_memory": {
                        "title": "Use Declarative Memory",
                        "type": "boolean"
                    },
                    "use_procedural_memory": {
                        "title": "Use Procedural Memory",
                        "type": "boolean"
                    }
                }
            },
            "QueryData": {
                "title": "QueryData",
                "required": [
                    "text",
                    "vector"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "vector": {
                        "title": "Vector",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "SettingBody": {
                "title": "SettingBody",
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "type": "object"
                    },
                    "category": {
                        "title": "Category",
                        "type": "string"
                    }
                }
            },
            "Setting": {
                "title": "Setting",
                "type": "object",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "object"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/JsonSchema"
                    }
                }
            },
            "JsonSchema": {
                "title": "JsonSchema",
                "required": [
                    "title",
                    "type",
                    "required",
                    "properties"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "properties": {
                        "title": "Properties",
                        "type": "object"
                    },
                    "required": {
                        "title": "Required",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": {
                        "oneOf": [
                            { "type": "boolean" },
                            { "type": "object" }
                        ]
                    },
                    "definitions": {
                        "title": "Definitions",
                        "type": "object"
                    },
                    "humanReadableName": {
                        "title": "Human Readable Name",
                        "type": "string"
                    },
                    "link": {
                        "title": "Link",
                        "type": "string"
                    }
                }
            },
            "SettingsResponse": {
                "title": "SettingsResponse",
                "required": [
                    "settings"
                ],
                "type": "object",
                "properties": {
                    "settings": {
                        "title": "Settings",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Setting"
                        }
                    },
                    "selected_configuration": {
                        "title": "SelectedConfiguration",
                        "nullable": "true",
                        "type": "string"
                    }
                }
            },
            "VectorsData": {
                "title": "VectorsData",
                "required": [
                    "embedder",
                    "collections"
                ],
                "type": "object",
                "properties": {
                    "embedder": {
                        "title": "Embedder",
                        "type": "string"
                    },
                    "collections": {
                        "title": "Collections",
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/CollectionData"
                            }
                        }
                    }
                }
            },
            "WebResponse": {
                "title": "WebResponse",
                "required": [
                    "url",
                    "info"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "title": "Url",
                        "type": "string"
                    },
                    "info": {
                        "title": "Info",
                        "type": "string"
                    }
                }
            },
            "DeleteResponse": {
                "title": "DeleteResponse",
                "required": [
                    "deleted"
                ],
                "type": "object",
                "properties": {
                    "deleted": {
                        "title": "Deleted",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "object"
                            }
                        ]
                    }
                }
            },
            "Status": {
                "title": "Status",
                "required": [
                    "status",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {}
    }
}